{
  "name": "lie-zipwith",
  "version": "0.1.1",
  "description": "zip it up with a lie",
  "main": "lib/zipwith.js",
  "scripts": {
    "test": "./node_modules/istanbul/lib/cli.js test ./node_modules/mocha/bin/_mocha test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/lie-zipwith.git"
  },
  "keywords": [
    "lie",
    "promise",
    "async"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/calvinmetcalf/lie-zipwith/issues"
  },
  "devDependencies": {
    "mocha-as-promised": "~1.4.0",
    "chai-as-promised": "~4.0.0",
    "chai": "~1.8.1",
    "mocha": "~1.13.0",
    "istanbul": "~0.1.44",
    "lie-resolve": "~0.1.0"
  },
  "dependencies": {
    "lie-quickmap": "~0.1.2",
    "lie-quickeach": "~0.1.1",
    "lie-map": "~0.1.2",
    "lie-all": "~0.1.3"
  },
  "readme": "```javascript\nvar zipwith = require('lie-zipwith');\n```\n\n###zipwith\n\n```javascript\nzipwith(function,array of things[,...] (or promises for arrays of things))\n```\n\nzips the 2 or more arrays up with a function 'func' such that `zip(func(1,2),func('a','b'))` returns `[func(1,'a'),func(2,'b')];`. When called with one array it is equivalent to [lie-map](https://github.com/calvinmetcalf/lie-map) (with the arguments in reverse order).\n\n## License\n\n  MIT\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/calvinmetcalf/lie-zipwith",
  "_id": "lie-zipwith@0.1.1",
  "dist": {
    "shasum": "870470dd522ce70ab66726636e0b67f3c50d03fa"
  },
  "_resolved": "https://registry.npmjs.org/lie-zipwith/-/lie-zipwith-0.1.1.tgz",
  "_from": "lie-zipwith@~0.1.1"
}
