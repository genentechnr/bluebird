{
  "name": "lie-fold",
  "version": "0.1.1",
  "description": "fold all of the lies",
  "main": "lib/fold.js",
  "scripts": {
    "test": "./node_modules/istanbul/lib/cli.js test ./node_modules/mocha/bin/_mocha test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/lie-fold.git"
  },
  "keywords": [
    "lie",
    "promise",
    "async"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/calvinmetcalf/lie-fold/issues"
  },
  "devDependencies": {
    "mocha-as-promised": "~1.4.0",
    "chai-as-promised": "~4.0.0",
    "chai": "~1.8.1",
    "mocha": "~1.13.0",
    "istanbul": "~0.1.44",
    "lie-resolve": "~0.1.0",
    "lie": "~2.0.7"
  },
  "dependencies": {
    "lie-quickeach": "~0.1.1",
    "lie-some": "~0.1.2",
    "lie-apply": "~0.1.0"
  },
  "readme": "```javascript\nvar fold = require('lie-fold');\n```\n\n###fold\n\n```javascript\nfold(array (or promise for array) of things,function,accumulator)\n```\n\nlike Array.prototype.reduce, but the array may include promises or values and the function may return a promise or a value. `fold` always return a promise.\n\nunlike [lfold](https://github.com/calvinmetcalf/lie-lfold) and [rfold](https://github.com/calvinmetcalf/lie-rfold) fold calls the values in the order the promises resolve.\n\n\n## License\n\n  MIT\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/calvinmetcalf/lie-fold",
  "_id": "lie-fold@0.1.1",
  "dist": {
    "shasum": "29709425f9eca6dfd0ff4fa4dd19e133e3214a71"
  },
  "_resolved": "https://registry.npmjs.org/lie-fold/-/lie-fold-0.1.1.tgz",
  "_from": "lie-fold@~0.1.1"
}
